{"ast":null,"code":"var _jsxFileName = \"/Users/KellyCastillo/finalproject/src/components/Popular.jsx\",\n  _s = $RefreshSig$();\n// Imports useEffect and useState React features \n// Reference: https://reactjs.org/docs/hooks-intro.html\nimport { useEffect, useState } from \"react\";\n// Imports React Splide component for the Splide slider/carousal \n// Reference: https://splidejs.com/integration/react-splide/\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\n// Imports CSS file that is to be used with the Splide component\nimport \"@splidejs/splide/dist/css/splide.min.css\";\n// Imports Link element from React Router DOM npm package that lets you implement dynamic routing in a web app\n// Reference: https://reactrouter.com/en/main/components/link \nimport { Link } from \"react-router-dom\";\n\n// The function Popular returns some html \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Popular() {\n  _s();\n  // useState declares a \"state variable\" which is called popular here\n  // useState returns an array with two items: the current state of popular, which is set to the initial state of an empty array useState([])\n  // setPopular is the function that updates the current state\n  const [popular, setPopular] = useState([]);\n\n  // useEffect tells React that the getPopular function needs to run after render\n  // Putting useEffect inside the function component Popular allows access to the popular state variable\n  useEffect(() => {\n    getPopular();\n  }, []);\n\n  // Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n  // The async function is a way to write asynchronous code in JavaScript, allowing other code to run in the meantime\n  // The async function is a special type of function that returns a promise\n  // A promise is an object that represents the result of the async function\n  // The await expression pauses the execution of the function until a promise is resolved\n  // The getPopular function sends an HTTP request to the Spoonacular API and waits for a response\n  // Once the response is received, it converts the response to JSON and returns the resulting data\n  // setPopular(data.recipes) will update the current state of the popular state variable to the recipes array\n  const getPopular = async () => {\n    const api = await fetch(`https://api.spoonacular.com/recipes/random?apiKey=e651b079eb2a4f55a0b04627fff59f28&number=8`);\n    const data = await api.json();\n    setPopular(data.recipes);\n  };\n\n  // html that is returned by the function Popular\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Popular Picks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Splide // Displays the recipes in a carousel \n    , {\n      options: {\n        perPage: 3,\n        // Displays only 3 recipes per page\n        arrows: false,\n        // Hides the default arrows for moving the carousel\n        pagination: false,\n        // Hides page indication at bottom of the carousel\n        drag: \"free\",\n        // Allows the user to drag the carousel\n        gap: \"5rem\" // Places a 5rem gap between the recipes\n      },\n      children: popular.map(recipe => {\n        // Reference: https://levelup.gitconnected.com/using-the-map-function-in-javascript-react-b433736759d4\n        // The .map() function applies a function to each element in an array and return a new array with the modified elements\n        // This will render a Splide carousel with the recipes. For each recipe, an image and name of the recipe will be displayed\n        // Reference: https://reactrouter.com/en/main/components/link\n        // The Link element lets the user navigate to another page by clicking on it\n        // The Link element surrounding the recipe name and image will make the whole thing clickable. When clicked, the user is directed to that recipe page\n        return /*#__PURE__*/_jsxDEV(SplideSlide, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardInfo\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: '/recipe/' + recipe.id,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: recipe.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: recipe.image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, recipe.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n// Reference: https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export \n// The export statement exports the function Popular from this module so that it can be used by other parts of your program\n_s(Popular, \"SPyBdi+MjTisJBXcu01E2tULWVc=\");\n_c = Popular;\nexport default Popular;\nvar _c;\n$RefreshReg$(_c, \"Popular\");","map":{"version":3,"names":["useEffect","useState","Splide","SplideSlide","Link","Popular","popular","setPopular","getPopular","api","fetch","data","json","recipes","perPage","arrows","pagination","drag","gap","map","recipe","id","title","image"],"sources":["/Users/KellyCastillo/finalproject/src/components/Popular.jsx"],"sourcesContent":["// Imports useEffect and useState React features \n// Reference: https://reactjs.org/docs/hooks-intro.html\nimport { useEffect, useState } from \"react\";\n// Imports React Splide component for the Splide slider/carousal \n// Reference: https://splidejs.com/integration/react-splide/\nimport { Splide, SplideSlide} from \"@splidejs/react-splide\";\n// Imports CSS file that is to be used with the Splide component\nimport \"@splidejs/splide/dist/css/splide.min.css\";\n// Imports Link element from React Router DOM npm package that lets you implement dynamic routing in a web app\n// Reference: https://reactrouter.com/en/main/components/link \nimport { Link } from \"react-router-dom\";\n\n// The function Popular returns some html \nfunction Popular(){\n\n    // useState declares a \"state variable\" which is called popular here\n    // useState returns an array with two items: the current state of popular, which is set to the initial state of an empty array useState([])\n    // setPopular is the function that updates the current state\n    const [popular, setPopular] = useState([]);\n\n    // useEffect tells React that the getPopular function needs to run after render\n    // Putting useEffect inside the function component Popular allows access to the popular state variable\n    useEffect(() => {\n        getPopular();\n    },[]);\n\n    // Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n    // The async function is a way to write asynchronous code in JavaScript, allowing other code to run in the meantime\n    // The async function is a special type of function that returns a promise\n    // A promise is an object that represents the result of the async function\n    // The await expression pauses the execution of the function until a promise is resolved\n    // The getPopular function sends an HTTP request to the Spoonacular API and waits for a response\n    // Once the response is received, it converts the response to JSON and returns the resulting data\n    // setPopular(data.recipes) will update the current state of the popular state variable to the recipes array\n    const getPopular = async () => {\n        const api = await fetch(`https://api.spoonacular.com/recipes/random?apiKey=e651b079eb2a4f55a0b04627fff59f28&number=8`);\n        const data = await api.json();\n        setPopular(data.recipes);\n    };\n\n    // html that is returned by the function Popular\n    return (\n        <div className=\"wrapper\">\n            <h3>Popular Picks</h3>\n\n            <Splide // Displays the recipes in a carousel \n                options={{\n                    perPage:3, // Displays only 3 recipes per page\n                    arrows:false, // Hides the default arrows for moving the carousel\n                    pagination:false, // Hides page indication at bottom of the carousel\n                    drag:\"free\", // Allows the user to drag the carousel\n                    gap:\"5rem\", // Places a 5rem gap between the recipes\n                }}>\n\n            {popular.map((recipe) => { // Reference: https://levelup.gitconnected.com/using-the-map-function-in-javascript-react-b433736759d4\n            // The .map() function applies a function to each element in an array and return a new array with the modified elements\n            // This will render a Splide carousel with the recipes. For each recipe, an image and name of the recipe will be displayed\n            // Reference: https://reactrouter.com/en/main/components/link\n            // The Link element lets the user navigate to another page by clicking on it\n            // The Link element surrounding the recipe name and image will make the whole thing clickable. When clicked, the user is directed to that recipe page\n                return (\n                    <SplideSlide key={recipe.id}>\n                        <div className=\"cardInfo\" key={recipe.id}> \n                            <Link to={'/recipe/' + recipe.id}>\n                                <p>{recipe.title}</p>\n                                <img src={recipe.image} alt=\"\" />\n                            </Link>\n                        </div>\n                    </SplideSlide>\n                ); \n            })}\n            </Splide>\n        </div>\n    );\n}\n\n// Reference: https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export \n// The export statement exports the function Popular from this module so that it can be used by other parts of your program\nexport default Popular;\n"],"mappings":";;AAAA;AACA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AACA;AACA,SAASC,MAAM,EAAEC,WAAW,QAAO,wBAAwB;AAC3D;AACA,OAAO,0CAA0C;AACjD;AACA;AACA,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AAAA;AACA,SAASC,OAAO,GAAE;EAAA;EAEd;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;EACAD,SAAS,CAAC,MAAM;IACZQ,UAAU,EAAE;EAChB,CAAC,EAAC,EAAE,CAAC;;EAEL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMA,UAAU,GAAG,YAAY;IAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,6FAA4F,CAAC;IACtH,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC7BL,UAAU,CAACI,IAAI,CAACE,OAAO,CAAC;EAC5B,CAAC;;EAED;EACA,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eAEtB,QAAC,MAAM,CAAC;IAAA;MACJ,OAAO,EAAE;QACLC,OAAO,EAAC,CAAC;QAAE;QACXC,MAAM,EAAC,KAAK;QAAE;QACdC,UAAU,EAAC,KAAK;QAAE;QAClBC,IAAI,EAAC,MAAM;QAAE;QACbC,GAAG,EAAC,MAAM,CAAE;MAChB,CAAE;MAAA,UAELZ,OAAO,CAACa,GAAG,CAAEC,MAAM,IAAK;QAAE;QAC3B;QACA;QACA;QACA;QACA;QACI,oBACI,QAAC,WAAW;UAAA,uBACR;YAAK,SAAS,EAAC,UAAU;YAAA,uBACrB,QAAC,IAAI;cAAC,EAAE,EAAE,UAAU,GAAGA,MAAM,CAACC,EAAG;cAAA,wBAC7B;gBAAA,UAAID,MAAM,CAACE;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eACrB;gBAAK,GAAG,EAAEF,MAAM,CAACG,KAAM;gBAAC,GAAG,EAAC;cAAE;gBAAA;gBAAA;gBAAA;cAAA,QAAG;YAAA;cAAA;cAAA;cAAA;YAAA;UAC9B,GAJoBH,MAAM,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA;QAKlC,GANQD,MAAM,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAOb;MAEtB,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACO;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEd;;AAEA;AACA;AAAA,GAhEShB,OAAO;AAAA,KAAPA,OAAO;AAiEhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}