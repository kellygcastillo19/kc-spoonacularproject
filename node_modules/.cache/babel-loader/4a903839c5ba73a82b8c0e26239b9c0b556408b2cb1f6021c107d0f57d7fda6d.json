{"ast":null,"code":"var _jsxFileName = \"/Users/KellyCastillo/finalproject/src/pages/Searched.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// Imports useEffect and useState React features \n// Reference: https://reactjs.org/docs/hooks-intro.html\nimport { useEffect, useState } from \"react\";\n// Imports the useParams hook from React Router\n// Reference: https://javascript.plainenglish.io/react-router-how-to-use-the-useparams-hook-321a6461732\nimport { useParams } from \"react-router-dom\";\n// Imports Link element from React Router DOM npm package that lets you implement dynamic routing in a web app\n// Reference: https://reactrouter.com/en/main/components/link \nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Searched() {\n  _s();\n  // useState declares a \"state variable\" called searchedRecipes\n  // useState returns an array with two items: the current state of searchedRecipes, which is set to the initial state of an empty array useState([])\n  // setSearchedRecipes is the function that updates the current state\n  const [searchedRecipes, setSearchedRecipes] = useState([]);\n  let params = useParams();\n\n  // Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n  // The async function is a way to write asynchronous code in JavaScript, allowing other code to run in the meantime\n  // The async function is a special type of function that returns a promise\n  // A promise is an object that represents the result of the async function\n  // The await expression pauses the execution of the function until a promise is resolved\n  // The getSearched function sends an HTTP request to the Spoonacular API and waits for a response\n  // Once the response is received, it converts the response to JSON and returns the resulting data\n  // setSearchedRecipes(recipes.results) will update the current state of the searchedRecipes state variable to the results array\n  const getSearched = async name => {\n    const data = await fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=e651b079eb2a4f55a0b04627fff59f28&query=${name}`);\n    const recipes = await data.json();\n    setSearchedRecipes(recipes.results);\n  };\n\n  // The function passed to useEffect calls getSearched and passes it the value of the params.search variable\n  // The second argument to useEffect is an array containing the params.search variable\n  // This means that the getSearched function will be called after the component renders and any time the params.search value changes\n  useEffect(() => {\n    getSearched(params.search);\n  }, [params.search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: searchedRecipes.map(item => {\n      // Reference: https://levelup.gitconnected.com/using-the-map-function-in-javascript-react-b433736759d4\n      // The .map() function applies a function to each element in an array and return a new array with the modified elements\n      // Reference: https://reactrouter.com/en/main/components/link\n      // The Link element lets the user navigate to another page by clicking on it\n      // The Link element surrounding the item image and the item title will make the whole thing clickable. When clicked, the user is directed to that recipe page\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipeInfo\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: '/recipe/' + item.id,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n// Reference: https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export \n// The export statement exports the function Popular from this module so that it can be used by other parts of your program\n_s(Searched, \"EA/UH+hErMz0y211hGQq5RPtRO0=\", false, function () {\n  return [useParams];\n});\n_c = Searched;\nexport default Searched;\nvar _c;\n$RefreshReg$(_c, \"Searched\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","Searched","searchedRecipes","setSearchedRecipes","params","getSearched","name","data","fetch","recipes","json","results","search","map","item","id","image","title"],"sources":["/Users/KellyCastillo/finalproject/src/pages/Searched.jsx"],"sourcesContent":["import React from \"react\";\n// Imports useEffect and useState React features \n// Reference: https://reactjs.org/docs/hooks-intro.html\nimport { useEffect, useState } from \"react\";\n// Imports the useParams hook from React Router\n// Reference: https://javascript.plainenglish.io/react-router-how-to-use-the-useparams-hook-321a6461732\nimport { useParams } from \"react-router-dom\";\n// Imports Link element from React Router DOM npm package that lets you implement dynamic routing in a web app\n// Reference: https://reactrouter.com/en/main/components/link \nimport { Link } from \"react-router-dom\";\n\nfunction Searched() {\n\n    // useState declares a \"state variable\" called searchedRecipes\n    // useState returns an array with two items: the current state of searchedRecipes, which is set to the initial state of an empty array useState([])\n    // setSearchedRecipes is the function that updates the current state\n    const [searchedRecipes, setSearchedRecipes] = useState([]);\n    let params = useParams();\n\n    // Reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n    // The async function is a way to write asynchronous code in JavaScript, allowing other code to run in the meantime\n    // The async function is a special type of function that returns a promise\n    // A promise is an object that represents the result of the async function\n    // The await expression pauses the execution of the function until a promise is resolved\n    // The getSearched function sends an HTTP request to the Spoonacular API and waits for a response\n    // Once the response is received, it converts the response to JSON and returns the resulting data\n    // setSearchedRecipes(recipes.results) will update the current state of the searchedRecipes state variable to the results array\n    const getSearched = async (name) => {\n        const data = await fetch(\n            `https://api.spoonacular.com/recipes/complexSearch?apiKey=e651b079eb2a4f55a0b04627fff59f28&query=${name}`\n        );\n        const recipes = await data.json();\n        setSearchedRecipes(recipes.results);\n    };\n\n    // The function passed to useEffect calls getSearched and passes it the value of the params.search variable\n    // The second argument to useEffect is an array containing the params.search variable\n    // This means that the getSearched function will be called after the component renders and any time the params.search value changes\n    useEffect(() => {\n        getSearched(params.search);\n    },[params.search]);\n\n    return (\n        <div className=\"grid\">\n            {searchedRecipes.map((item) => { // Reference: https://levelup.gitconnected.com/using-the-map-function-in-javascript-react-b433736759d4\n            // The .map() function applies a function to each element in an array and return a new array with the modified elements\n            // Reference: https://reactrouter.com/en/main/components/link\n            // The Link element lets the user navigate to another page by clicking on it\n            // The Link element surrounding the item image and the item title will make the whole thing clickable. When clicked, the user is directed to that recipe page\n                return (\n                    <div className=\"recipeInfo\" key={item.id}> \n                        <Link to={'/recipe/' + item.id}>\n                        <img src={item.image} alt=\"\" />\n                        <h4>{item.title}</h4>\n                        </Link>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\n// Reference: https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export \n// The export statement exports the function Popular from this module so that it can be used by other parts of your program\nexport default Searched;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AACA;AACA,SAASC,SAAS,QAAQ,kBAAkB;AAC5C;AACA;AACA,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,SAASC,QAAQ,GAAG;EAAA;EAEhB;EACA;EACA;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1D,IAAIM,MAAM,GAAGL,SAAS,EAAE;;EAExB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMM,WAAW,GAAG,MAAOC,IAAI,IAAK;IAChC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CACnB,mGAAkGF,IAAK,EAAC,CAC5G;IACD,MAAMG,OAAO,GAAG,MAAMF,IAAI,CAACG,IAAI,EAAE;IACjCP,kBAAkB,CAACM,OAAO,CAACE,OAAO,CAAC;EACvC,CAAC;;EAED;EACA;EACA;EACAd,SAAS,CAAC,MAAM;IACZQ,WAAW,CAACD,MAAM,CAACQ,MAAM,CAAC;EAC9B,CAAC,EAAC,CAACR,MAAM,CAACQ,MAAM,CAAC,CAAC;EAElB,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,UAChBV,eAAe,CAACW,GAAG,CAAEC,IAAI,IAAK;MAAE;MACjC;MACA;MACA;MACA;MACI,oBACI;QAAK,SAAS,EAAC,YAAY;QAAA,uBACvB,QAAC,IAAI;UAAC,EAAE,EAAE,UAAU,GAAGA,IAAI,CAACC,EAAG;UAAA,wBAC/B;YAAK,GAAG,EAAED,IAAI,CAACE,KAAM;YAAC,GAAG,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eAC/B;YAAA,UAAKF,IAAI,CAACG;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA;MACd,GAJsBH,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAKlC;IAEd,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACA;AAEd;;AAEA;AACA;AAAA,GApDSd,QAAQ;EAAA,QAMAF,SAAS;AAAA;AAAA,KANjBE,QAAQ;AAqDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}